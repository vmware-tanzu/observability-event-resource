# Copyright 2020 VMware, Inc.
# SPDX-License-Identifier: Apache-2.0

repo_creds: &repo-creds
  uri: git@github.com:vmware-tanzu/observability-event-resource.git
  private_key: ((oer_deploy_key))

# TODO: Remove this when Concourse 7 is released and v1 is included
resource_types:
- name: registry-image-v1
  type: registry-image
  source:
    repository: concourse/registry-image-resource
    tag: '1'

resources:
- name: test-source
  type: git
  source:
    <<: *repo-creds
    paths:
    - 'Dockerfile'
    - 'go.*'
    - '**/*.go'

- name: release-source
  type: git
  source:
    <<: *repo-creds
    fetch_tags: true
    tag_filter: 'v*'

- name: github-registry
  type: registry-image-v1
  source:
    repository: docker.pkg.github.com/vmware-tanzu/observability-event-resource/observability-event-resource
    username: ((ghcr.username))
    password: ((ghcr.password))

jobs:
- name: test-on-push
  plan:
  - get: source
    resource: test-source
    trigger: true
  - task: build-image
    privileged: true
    config: 
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: source
      params:
        CONTEXT: source
      run:
        path: build

- name: build-release
  plan:
  - get: source
    resource: release-source
    trigger: true
  - task: get-version-build-arg
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: ubuntu
      inputs:
      - name: source
      outputs:
      - name: version
      run:
        path: bash
        args:
        - -xc
        - |
          echo "VERSION=$(cat source/.git/ref)" > version/version.txt
  - task: build-image
    privileged: true
    config: 
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: source
      - name: version
      outputs:
      - name: image
      params:
        CONTEXT: source
        BUILD_ARGS_FILE: version/version.txt
      run:
        path: build
  - load_var: tag-version
    file: source/.git/ref
    format: trim
  - put: github-registry
    params:
      image: image/image.tar
      version: ((.:tag-version))
      bump_aliases: true
    get_params:
      skip_download: true

